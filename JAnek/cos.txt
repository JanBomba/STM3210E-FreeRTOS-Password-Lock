{
uint8_t znak; // czy na pewno moze byc jak go wykorzystujemy jako cyfra 0
uint8_t symbol;
uint8_t klawisz_0;
uint8_t klawisz_1;
uint8_t klawisz_2;
uint8_t klawisz_3;
uint8_t klawisz_4;
uint8_t klawisz_5;
uint8_t klawisz_6;
uint8_t klawisz_7;
uint8_t klawisz_8;
uint8_t klawisz_9;
uint8_t klawisz_UP;
uint8_t klawisz_DOWN;
uint8_t klawisz_ENTER;
uint8_t klawisz_SERWIS;
uint8_t klawisz_G;
uint8_t klawisz_K;
uint8_t n;

//klawiatura
		if(n==4) n=1;
		for(int i=1;i<5;i++)
	{
		switch (i)
		{
case 1:
				HAL_GPIO_WritePin(w1_GPIO_Port, w1_Pin, GPIO_PIN_RESET);
			////////////////////////////   1   ////////////////////////////
			switch (klawisz_1)
			{
				case 0: if(!HAL_GPIO_ReadPin(k1_GPIO_Port, k1_Pin)) klawisz_1++; break;
				case 1: if(!HAL_GPIO_ReadPin(k1_GPIO_Port, k1_Pin)) klawisz_1++; else klawisz_1=0; break;
				case 2: znak=1; n++; klawisz_1++;
				case 3: if(HAL_GPIO_ReadPin(k1_GPIO_Port, k1_Pin)) klawisz_1++; break;
				case 4: if(HAL_GPIO_ReadPin(k1_GPIO_Port, k1_Pin)) klawisz_1=0; else klawisz_1=3; break;
			}
			////////////////////////////   2   ////////////////////////////
			switch (klawisz_2)
			{
				case 0: if(!HAL_GPIO_ReadPin(k2_GPIO_Port, k2_Pin)) klawisz_2++; break;
				case 1: if(!HAL_GPIO_ReadPin(k2_GPIO_Port, k2_Pin)) klawisz_2++; else klawisz_2=0; break;
				case 2: znak=2; n++; klawisz_2++;
				case 3: if(HAL_GPIO_ReadPin(k2_GPIO_Port, k2_Pin)) klawisz_2++; break;
				case 4: if(HAL_GPIO_ReadPin(k2_GPIO_Port, k2_Pin)) klawisz_2=0; else klawisz_2=3; break;
			}
			////////////////////////////   3   ////////////////////////////
			switch (klawisz_3)
			{
				case 0: if(!HAL_GPIO_ReadPin(k3_GPIO_Port, k3_Pin)) klawisz_3++; break;
				case 1: if(!HAL_GPIO_ReadPin(k3_GPIO_Port, k3_Pin)) klawisz_3++; else klawisz_3=0; break;
				case 2: znak=3; n++; klawisz_3++;
				case 3: if(HAL_GPIO_ReadPin(k3_GPIO_Port, k3_Pin)) klawisz_3++; break;
				case 4: if(HAL_GPIO_ReadPin(k3_GPIO_Port, k3_Pin)) klawisz_3=0; else klawisz_3=3; break;
			}
			////////////////////////////   A   ////////////////////////////
			switch (klawisz_UP)
			{
				case 0: if(!HAL_GPIO_ReadPin(k4_GPIO_Port, k4_Pin)) klawisz_UP++; break;
				case 1: if(!HAL_GPIO_ReadPin(k4_GPIO_Port, k4_Pin)) klawisz_UP++; else klawisz_UP=0; break;
				case 2: symbol=10; klawisz_UP++;
				case 3: if(HAL_GPIO_ReadPin(k4_GPIO_Port, k4_Pin)) klawisz_UP++; break;
				case 4: if(HAL_GPIO_ReadPin(k4_GPIO_Port, k4_Pin)) klawisz_UP=0; else klawisz_UP=3; break;
			}
				HAL_GPIO_WritePin(w1_GPIO_Port, w1_Pin, GPIO_PIN_SET);
			break;
case 2:
				HAL_GPIO_WritePin(w2_GPIO_Port, w2_Pin, GPIO_PIN_RESET);
			////////////////////////////   4   ////////////////////////////
			switch (klawisz_4)
			{
				case 0: if(!HAL_GPIO_ReadPin(k1_GPIO_Port, k1_Pin)) klawisz_4++; break;
				case 1: if(!HAL_GPIO_ReadPin(k1_GPIO_Port, k1_Pin)) klawisz_4++; else klawisz_4=0; break;
				case 2: znak=4; n++; klawisz_4++;
				case 3: if(HAL_GPIO_ReadPin(k1_GPIO_Port, k1_Pin)) klawisz_4++; break;
				case 4: if(HAL_GPIO_ReadPin(k1_GPIO_Port, k1_Pin)) klawisz_4=0; else klawisz_4=3; break;
			}
			////////////////////////////   5   ////////////////////////////
			switch (klawisz_5)
			{
				case 0: if(!HAL_GPIO_ReadPin(k2_GPIO_Port, k2_Pin)) klawisz_5++; break;
				case 1: if(!HAL_GPIO_ReadPin(k2_GPIO_Port, k2_Pin)) klawisz_5++; else klawisz_5=0; break;
				case 2: znak=5; n++; klawisz_5++;
				case 3: if(HAL_GPIO_ReadPin(k2_GPIO_Port, k2_Pin)) klawisz_5++; break;
				case 4: if(HAL_GPIO_ReadPin(k2_GPIO_Port, k2_Pin)) klawisz_5=0; else klawisz_5=3; break;
			}
			////////////////////////////   6   ////////////////////////////
			switch (klawisz_6)
			{
				case 0: if(!HAL_GPIO_ReadPin(k3_GPIO_Port, k3_Pin)) klawisz_6++; break;
				case 1: if(!HAL_GPIO_ReadPin(k3_GPIO_Port, k3_Pin)) klawisz_6++; else klawisz_6=0; break;
				case 2: znak=6; n++; klawisz_6++;
				case 3: if(HAL_GPIO_ReadPin(k3_GPIO_Port, k3_Pin)) klawisz_6++; break;
				case 4: if(HAL_GPIO_ReadPin(k3_GPIO_Port, k3_Pin)) klawisz_6=0; else klawisz_6=3; break;
			}
			////////////////////////////   B   ////////////////////////////
			switch (klawisz_DOWN)
			{
				case 0: if(!HAL_GPIO_ReadPin(k4_GPIO_Port, k4_Pin)) klawisz_DOWN++; break;
				case 1: if(!HAL_GPIO_ReadPin(k4_GPIO_Port, k4_Pin)) klawisz_DOWN++; else klawisz_DOWN=0; break;
				case 2: symbol=11; klawisz_DOWN++;
				case 3: if(HAL_GPIO_ReadPin(k4_GPIO_Port, k4_Pin)) klawisz_DOWN++; break;
				case 4: if(HAL_GPIO_ReadPin(k4_GPIO_Port, k4_Pin)) klawisz_DOWN=0; else klawisz_DOWN=3; break;
			}
				HAL_GPIO_WritePin(w2_GPIO_Port, w2_Pin, GPIO_PIN_SET);
			break;
case 3:
				HAL_GPIO_WritePin(w3_GPIO_Port, w3_Pin, GPIO_PIN_RESET);
			////////////////////////////   7   ////////////////////////////
			switch (klawisz_7)
			{
				case 0: if(!HAL_GPIO_ReadPin(k1_GPIO_Port, k1_Pin)) klawisz_7++; break;
				case 1: if(!HAL_GPIO_ReadPin(k1_GPIO_Port, k1_Pin)) klawisz_7++; else klawisz_7=0; break;
				case 2: znak=7; n++; klawisz_7++;
				case 3: if(HAL_GPIO_ReadPin(k1_GPIO_Port, k1_Pin)) klawisz_7++; break;
				case 4: if(HAL_GPIO_ReadPin(k1_GPIO_Port, k1_Pin)) klawisz_7=0; else klawisz_7=3; break;
			}
			////////////////////////////   8   ////////////////////////////
			switch (klawisz_8)
			{
				case 0: if(!HAL_GPIO_ReadPin(k2_GPIO_Port, k2_Pin)) klawisz_8++; break;
				case 1: if(!HAL_GPIO_ReadPin(k2_GPIO_Port, k2_Pin)) klawisz_8++; else klawisz_8=0; break;
				case 2: znak=8; n++; klawisz_8++;
				case 3: if(HAL_GPIO_ReadPin(k2_GPIO_Port, k2_Pin)) klawisz_8++; break;
				case 4: if(HAL_GPIO_ReadPin(k2_GPIO_Port, k2_Pin)) klawisz_8=0; else klawisz_8=3; break;
			}
			////////////////////////////   9   ////////////////////////////
			switch (klawisz_9)
			{
				case 0: if(!HAL_GPIO_ReadPin(k3_GPIO_Port, k3_Pin)) klawisz_9++; break;
				case 1: if(!HAL_GPIO_ReadPin(k3_GPIO_Port, k3_Pin)) klawisz_9++; else klawisz_9=0; break;
				case 2: znak=9; n++; klawisz_9++;
				case 3: if(HAL_GPIO_ReadPin(k3_GPIO_Port, k3_Pin)) klawisz_9++; break;
				case 4: if(HAL_GPIO_ReadPin(k3_GPIO_Port, k3_Pin)) klawisz_9=0; else klawisz_9=3; break;
			}
			////////////////////////////   C   ////////////////////////////
			switch (klawisz_ENTER)
			{
				case 0: if(!HAL_GPIO_ReadPin(k4_GPIO_Port, k4_Pin)) klawisz_ENTER++; break;
				case 1: if(!HAL_GPIO_ReadPin(k4_GPIO_Port, k4_Pin)) klawisz_ENTER++; else klawisz_ENTER=0; break;
				case 2: symbol=12; klawisz_ENTER++;
				case 3: if(HAL_GPIO_ReadPin(k4_GPIO_Port, k4_Pin)) klawisz_ENTER++; break;
				case 4: if(HAL_GPIO_ReadPin(k4_GPIO_Port, k4_Pin)) klawisz_ENTER=0; else klawisz_ENTER=3; break;
			}
				HAL_GPIO_WritePin(w3_GPIO_Port, w3_Pin, GPIO_PIN_SET);
			break;
case 4:
				HAL_GPIO_WritePin(w4_GPIO_Port, w4_Pin, GPIO_PIN_RESET);
			////////////////////////////   *   ////////////////////////////
			switch (klawisz_G)
			{
				case 0: if(!HAL_GPIO_ReadPin(k1_GPIO_Port, k1_Pin)) klawisz_G++; break;
				case 1: if(!HAL_GPIO_ReadPin(k1_GPIO_Port, k1_Pin)) klawisz_G++; else klawisz_G=0; break;
				case 2: symbol=13; klawisz_G++;
				case 3: if(HAL_GPIO_ReadPin(k1_GPIO_Port, k1_Pin)) klawisz_G++; break;
				case 4: if(HAL_GPIO_ReadPin(k1_GPIO_Port, k1_Pin)) klawisz_G=0; else klawisz_G=3; break;
			}
			////////////////////////////   0   ////////////////////////////
			switch (klawisz_0)
			{
				case 0: if(!HAL_GPIO_ReadPin(k2_GPIO_Port, k2_Pin)) klawisz_0++; break;
				case 1: if(!HAL_GPIO_ReadPin(k2_GPIO_Port, k2_Pin)) klawisz_0++; else klawisz_0=0; break;
				case 2: znak=0; n++; klawisz_0++;
				case 3: if(HAL_GPIO_ReadPin(k2_GPIO_Port, k2_Pin)) klawisz_0++; break;
				case 4: if(HAL_GPIO_ReadPin(k2_GPIO_Port, k2_Pin)) klawisz_0=0; else klawisz_0=3; break;
			}
			////////////////////////////   #   ////////////////////////////
			switch (klawisz_K)
			{
				case 0: if(!HAL_GPIO_ReadPin(k3_GPIO_Port, k3_Pin)) klawisz_K++; break;
				case 1: if(!HAL_GPIO_ReadPin(k3_GPIO_Port, k3_Pin)) klawisz_K++; else klawisz_K=0; break;
				case 2: symbol=14; klawisz_K++;
				case 3: if(HAL_GPIO_ReadPin(k3_GPIO_Port, k3_Pin)) klawisz_K++; break;
				case 4: if(HAL_GPIO_ReadPin(k3_GPIO_Port, k3_Pin)) klawisz_K=0; else klawisz_K=3; break;
			}
			////////////////////////////   D   ////////////////////////////
			switch (klawisz_SERWIS)
			{
				case 0: if(!HAL_GPIO_ReadPin(k4_GPIO_Port, k4_Pin)) klawisz_SERWIS++; break;
				case 1: if(!HAL_GPIO_ReadPin(k4_GPIO_Port, k4_Pin)) klawisz_SERWIS++; else klawisz_SERWIS=0; break;
				case 2: symbol=15; klawisz_SERWIS++;
				case 3: if(HAL_GPIO_ReadPin(k4_GPIO_Port, k4_Pin)) klawisz_SERWIS++; break;
				case 4: if(HAL_GPIO_ReadPin(k4_GPIO_Port, k4_Pin)) klawisz_SERWIS=0; else klawisz_SERWIS=3; break;
			}
				HAL_GPIO_WritePin(w4_GPIO_Port, w4_Pin, GPIO_PIN_SET);
			break;
		}
	}
	xQueueSend(znakHandle,&znak,0);
	xQueueSend(symbolHandle,&symbol,0);
	xQueueSend(nHandle,&n,0);

	
	uint8_t n_display [DisplayWidth];
	uint8_t symbol_display [DisplayWidth];
	uint8_t znak_display [DisplayWidth];
		
		LCD_SetBackColor(Black);
		LCD_SetTextColor(Green);
				
		snprintf((char *)n_display, DisplayWidth, "   %d   ", n);
		LCD_DisplayStringLine(Line2, n_display);
		
		snprintf((char *)symbol_display, DisplayWidth, "   %d   ", symbol);
		LCD_DisplayStringLine(Line4, symbol_display);
		
		snprintf((char *)znak_display, DisplayWidth, "   %d   ", znak);
		LCD_DisplayStringLine(Line6, znak_display);
		
		vTaskDelay(dBounceTime/portTICK_PERIOD_MS);
	}